apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: golang-build-dev
spec:
  params:
  - name: message
    description: The message to print
    default: This is the default message
    type: string
  - name: repo-name
    description: The name of the repo
    type: string
  - name: repo-url
    description: The url of the repo
    type: string
  - name: repo-hash
    description: The commit hash of the repo
    type: string
  - name: actor-name
    description: The actor
    type: string
  - name: actor-email
    description: The actors email
    type: string
  - name: IMAGE_REG_BASE
    description: The base registry for the image
    type: string
 
  workspaces:
    - name: output
      
  steps: 
  - name: run-build
    image: quay.io/luigizuccarelli/golang-base:1.15.6
    workingDir: /workspace/output/$(params.repo-name)
    resources:
        limits:
          cpu: 100m
          memory: 1500Mi
        requests:
          cpu: 100m
          memory: 1500Mi
    command: ["make"]
    args: ["build"]
    securityContext:
      runAsUser: 0
    volumeMounts:
    - name: build-cache
      mountPath: /home/1001/pkg

    
  - name: build-and-push
    workingDir: /workspace/$(params.repo-name)
    image:  gcr.io/kaniko-project/executor@sha256:b9eec410fa32cd77cdb7685c70f86a96debb8b087e77e63d7fe37eaadb178709
    command: ["/kaniko/executor"]
    args: ["--dockerfile=/workspace/output/$(params.repo-name)/Dockerfile","--context=/workspace/output/$(params.repo-name)/","--destination=$(params.IMAGE_REG_BASE)$(params.repo-name):$(params.repo-hash)"]
    securityContext:
      runAsUser: 0
    volumeMounts:
    - name: docker-config
      mountPath: /kaniko/.docker/

  volumes:
  - name: docker-config
    configMap:
      name: docker-config
  - name: build-cache
    persistentVolumeClaim:
      claimName: build-cache-pvc-dev


